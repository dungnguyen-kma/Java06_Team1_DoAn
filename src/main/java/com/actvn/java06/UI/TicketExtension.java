/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.actvn.java06.UI;

import com.actvn.java06.MonthlyTicket;
import com.actvn.java06.FileSave;
import javax.swing.JOptionPane;
import static com.actvn.java06.PoolManage.monthlyTickets;
import java.io.IOException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Tatcataiso
 */
public class TicketExtension extends javax.swing.JFrame {

    /**
     * Creates new form TicketExtension
     */
    public TicketExtension() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jSelectOneMonth = new javax.swing.JRadioButton();
        jSelectThreeMonth = new javax.swing.JRadioButton();
        jSelectSixMonth = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });
        txtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNameKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Nhập vào họ tên khách hàng cần gia hạn vé:");

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã vé", "Tuổi", "Loại vé", "Tên khách hàng", "Địa chỉ", "Số điện thoại", "Ngày đăng ký", "Ngày hết hạn", "Giá tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable);

        jButton1.setText("Lưu");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Thoát");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Gia hạn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N

        jSelectOneMonth.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jSelectOneMonth.setText("1 tháng");
        jSelectOneMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSelectOneMonthActionPerformed(evt);
            }
        });

        jSelectThreeMonth.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jSelectThreeMonth.setText("3 tháng");
        jSelectThreeMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSelectThreeMonthActionPerformed(evt);
            }
        });

        jSelectSixMonth.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jSelectSixMonth.setText("6 tháng");
        jSelectSixMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSelectSixMonthActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSelectOneMonth)
                    .addComponent(jSelectSixMonth)
                    .addComponent(jSelectThreeMonth))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jSelectOneMonth)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSelectThreeMonth)
                .addGap(44, 44, 44)
                .addComponent(jSelectSixMonth)
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 873, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addComponent(jLabel1)
                        .addGap(42, 42, 42)
                        .addComponent(txtName)))
                .addGap(12, 12, 12)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(304, 304, 304)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(309, 309, 309))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private ArrayList<MonthlyTicket> arrayList = new ArrayList<>();
    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    public static String getLastWord(String str) {
        String[] words = str.split(" ");
        if (words.length > 0) {
            return words[words.length - 1];
        }
        return "";
    }
    private void txtNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyReleased
        // TODO add your handling code here:
        String key = txtName.getText();
        if (key.equals("")) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập họ tên khách hàng cần tìm kiếm!");
        } else {
            monthlyTickets.clear();
            try {
                FileSave.ReadArrayMonthlyTickets(monthlyTickets);
            } catch (IOException ex) {
                Logger.getLogger(SearchMonthlyTicket.class.getName()).log(Level.SEVERE, null, ex);
            }
            arrayList.clear();
            String subKey = "";
            for (MonthlyTicket ticket : monthlyTickets) {
                subKey = getLastWord(ticket.getCustomerName());
                if (key.equalsIgnoreCase(ticket.getCustomerName()) || key.equalsIgnoreCase(subKey)) {
                    arrayList.add(ticket);
                }
            }
            DefaultTableModel model = (DefaultTableModel) jTable.getModel();
            model.setRowCount(0);

            for (MonthlyTicket ticket : arrayList) {
                model.addRow(new Object[]{ticket.getTicketID(), ticket.getAge(), ticket.getIsTicketVip(), ticket.getCustomerName(), ticket.getCustomerAddress(), ticket.getCustomerPhone(), ticket.getRegistereDate(), ticket.getExpiedDate(), ticket.getMonthlyPrice(), ticket.getCustomerAvatar()});
            }
        }
    }//GEN-LAST:event_txtNameKeyReleased

    private void jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMouseClicked

    }//GEN-LAST:event_jTableMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            // TODO add your handling code here:
            FileSave.saveArrayMonthlyTickets(monthlyTickets);
            JOptionPane.showMessageDialog(this, "Lưu thành công!");
            dispose();
        } catch (IOException ex) {
            Logger.getLogger(SearchMonthlyTicket.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int ret = JOptionPane.showConfirmDialog(this, "Bạn có muốn lưu các thay đổi không?", "Thông Báo", JOptionPane.YES_NO_OPTION);
        if (ret == JOptionPane.YES_OPTION) {
            jButton1ActionPerformed(evt);
            dispose();
        } else {
            dispose();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jSelectOneMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSelectOneMonthActionPerformed
        // TODO add your handling code here:
        jSelectOneMonth.setSelected(true);
        jSelectThreeMonth.setSelected(false);
        jSelectSixMonth.setSelected(false);

        int ret = JOptionPane.showConfirmDialog(this, "Gia hạn vé này thêm 1 tháng?", "Thông Báo", JOptionPane.YES_NO_OPTION);
        if (ret == JOptionPane.YES_OPTION) {
            String ID;
            int row;
            row = jTable.getSelectedRow();
            ID = (String) jTable.getValueAt(row, 0);
            ArrayList<MonthlyTicket> copy = new ArrayList<>(arrayList);

            LocalDate endTime = null;

            for (MonthlyTicket ticket : copy) {
                if (ID.equals(ticket.getTicketID())) {
                    //registerDate = LocalDate.parse(formattedDate, formatter);
                    endTime = ticket.getExpiedDate();
                    endTime = ticket.checkExpiedDate(endTime, 1);
                    ticket.setExpiedDate(endTime);
                }
            }
            for (MonthlyTicket ticket : monthlyTickets) {
                if (ID.equals(ticket.getTicketID())) {
                    ticket.setExpiedDate(endTime);
                }
            }

            //jTableDaily.removeAll();
            DefaultTableModel model = (DefaultTableModel) jTable.getModel();
            model.setRowCount(0);

            for (MonthlyTicket ticket : arrayList) {
                model.addRow(new Object[]{ticket.getTicketID(), ticket.getAge(), ticket.getIsTicketVip(), ticket.getCustomerName(), ticket.getCustomerAddress(), ticket.getCustomerPhone(), ticket.getRegistereDate(), ticket.getExpiedDate(), ticket.getMonthlyPrice(), ticket.getCustomerAvatar()});
            }
            JOptionPane.showMessageDialog(this, "Gia hạn thành công!");
            jSelectOneMonth.setSelected(false);
        }
    }//GEN-LAST:event_jSelectOneMonthActionPerformed

    private void jSelectThreeMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSelectThreeMonthActionPerformed
        // TODO add your handling code here:
        jSelectThreeMonth.setSelected(true);
        jSelectOneMonth.setSelected(false);
        jSelectSixMonth.setSelected(false);

        int ret = JOptionPane.showConfirmDialog(this, "Gia hạn vé này thêm 3 tháng?", "Thông Báo", JOptionPane.YES_NO_OPTION);
        if (ret == JOptionPane.YES_OPTION) {
            String ID;
            int row;
            row = jTable.getSelectedRow();
            ID = (String) jTable.getValueAt(row, 0);
            ArrayList<MonthlyTicket> copy = new ArrayList<>(arrayList);

            LocalDate endTime = null;

            for (MonthlyTicket ticket : copy) {
                if (ID.equals(ticket.getTicketID())) {
                    //registerDate = LocalDate.parse(formattedDate, formatter);
                    endTime = ticket.getExpiedDate();
                    endTime = ticket.checkExpiedDate(endTime, 3);
                    ticket.setExpiedDate(endTime);
                }
            }
            for (MonthlyTicket ticket : monthlyTickets) {
                if (ID.equals(ticket.getTicketID())) {
                    ticket.setExpiedDate(endTime);
                }
            }

            //jTableDaily.removeAll();
            DefaultTableModel model = (DefaultTableModel) jTable.getModel();
            model.setRowCount(0);

            for (MonthlyTicket ticket : arrayList) {
                model.addRow(new Object[]{ticket.getTicketID(), ticket.getAge(), ticket.getIsTicketVip(), ticket.getCustomerName(), ticket.getCustomerAddress(), ticket.getCustomerPhone(), ticket.getRegistereDate(), ticket.getExpiedDate(), ticket.getMonthlyPrice(), ticket.getCustomerAvatar()});
            }
            JOptionPane.showMessageDialog(this, "Gia hạn thành công!");
            jSelectOneMonth.setSelected(false);
        }
    }//GEN-LAST:event_jSelectThreeMonthActionPerformed

    private void jSelectSixMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSelectSixMonthActionPerformed
        // TODO add your handling code here:
        jSelectSixMonth.setSelected(true);
        jSelectOneMonth.setSelected(false);
        jSelectThreeMonth.setSelected(false);

        int ret = JOptionPane.showConfirmDialog(this, "Gia hạn vé này thêm 6 tháng?", "Thông Báo", JOptionPane.YES_NO_OPTION);
        if (ret == JOptionPane.YES_OPTION) {
            String ID;
            int row;
            row = jTable.getSelectedRow();
            ID = (String) jTable.getValueAt(row, 0);
            ArrayList<MonthlyTicket> copy = new ArrayList<>(arrayList);

            LocalDate endTime = null;

            for (MonthlyTicket ticket : copy) {
                if (ID.equals(ticket.getTicketID())) {
                    //registerDate = LocalDate.parse(formattedDate, formatter);
                    endTime = ticket.getExpiedDate();
                    endTime = ticket.checkExpiedDate(endTime, 6);
                    ticket.setExpiedDate(endTime);
                }
            }
            for (MonthlyTicket ticket : monthlyTickets) {
                if (ID.equals(ticket.getTicketID())) {
                    ticket.setExpiedDate(endTime);
                }
            }

            //jTableDaily.removeAll();
            DefaultTableModel model = (DefaultTableModel) jTable.getModel();
            model.setRowCount(0);

            for (MonthlyTicket ticket : arrayList) {
                model.addRow(new Object[]{ticket.getTicketID(), ticket.getAge(), ticket.getIsTicketVip(), ticket.getCustomerName(), ticket.getCustomerAddress(), ticket.getCustomerPhone(), ticket.getRegistereDate(), ticket.getExpiedDate(), ticket.getMonthlyPrice(), ticket.getCustomerAvatar()});
            }
            JOptionPane.showMessageDialog(this, "Gia hạn thành công!");
            jSelectOneMonth.setSelected(false);
        }
    }//GEN-LAST:event_jSelectSixMonthActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TicketExtension.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TicketExtension.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TicketExtension.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TicketExtension.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TicketExtension().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton jSelectOneMonth;
    private javax.swing.JRadioButton jSelectSixMonth;
    private javax.swing.JRadioButton jSelectThreeMonth;
    private javax.swing.JTable jTable;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
